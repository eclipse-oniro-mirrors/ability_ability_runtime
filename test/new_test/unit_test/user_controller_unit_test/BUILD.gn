# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/user_controller"

copy("user_controller_copy") {
    sources = [
      "${ability_runtime_path}/services/abilitymgr/include/user_controller.h",
      "${ability_runtime_path}/services/abilitymgr/src/user_controller.cpp",
    ]
    outputs = [ "${target_gen_dir}/services/abilitymgr/src/user_controller/{{source_file_part}}" ]
}

ohos_unittest("user_controller_unit_test") {
  module_out_path = module_output_path

  include_dirs = [ 
    "${target_gen_dir}/services/abilitymgr/src/user_controller",
    "../../mock_utils",
    "../../mock/ability_info",
    "../../mock/ability_manager_errors",
    "../../mock/ability_manager_service",
    "../../mock/app_debug_listener_interface",
    "../../mock/app_mgr_client",
    "../../mock/app_mgr_constants",
    "../../mock/app_scheduler",
    "../../mock/application_info",
    "../../mock/bundle_info",
    "../../mock/configuration",
    "../../mock/element_name",
    "../../mock/event_handler_wrap",
    "../../mock/extension_ability_info",
    "../../mock/hilog_tag_wrapper",
    "../../mock/iremote_broker",
    "../../mock/iremote_object",
    "../../mock/last_exit_detail_info",
    "../../mock/mission_list_manager_interface",
    "../../mock/mock_session_manager_service",
    "../../mock/os_account_manager_wrapper",
    "../../mock/parameters",
    "../../mock/running_process_info",
    "../../mock/scene_board_judgement",
    "../../mock/skill",
    "../../mock/system_ability",
    "../../mock/string_wrapper",
    "../../mock/task_handler_wrap",
    "../../mock/task_utils_wrap",
    "../../mock/uri",
    "../../mock/user_event_handler",
    "../../mock/user_callback",
    "../../mock/want",
    "../../mock/want_params",
  ]

  sources =
      [ "${target_gen_dir}/services/abilitymgr/src/user_controller/user_controller.cpp" ]

  sources += [
    "user_controller_unit_test.cpp",
  ]

  deps = [
    ":user_controller_copy",
  ]

  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "json:nlohmann_json_static"
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":user_controller_unit_test" ]
}