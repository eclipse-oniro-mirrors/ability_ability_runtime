# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")
module_output_path = "ability_runtime/abilitymgr"

##############################fuzztest##########################################
ohos_fuzztest("SubManagersHelperFuzzTest") {
  module_out_path = module_output_path

  fuzz_config_file = "${ability_runtime_test_path}/fuzztest/submanagershelper_fuzzer"
  include_dirs = [
    "${ability_runtime_innerkits_path}/ability_manager/include",
    "${ability_runtime_services_path}/abilitymgr/include",
  ]
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]
  sources = [
    "submanagershelper_fuzzer.cpp",
    "${ability_runtime_innerkits_path}/deps_wrapper/src/os_account_manager_wrapper.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_cache_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/scene_board/ui_ability_lifecycle_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/sub_managers_helper.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/request_id_util.cpp",
  ]

  configs = [ "${ability_runtime_innerkits_path}/ability_manager:ability_manager_public_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_setting",
    "${ability_runtime_innerkits_path}/ability_manager:mission_info",
    "${ability_runtime_innerkits_path}/ability_manager:process_options",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:auto_startup_callback",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_path}/utils/global/freeze:freeze_util",
    "${ability_runtime_path}/utils/server/startup:startup_util",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
    "${ability_runtime_services_path}/abilitymgr:wantagent_manager",
    "${ability_runtime_services_path}/common:app_util",
    "${ability_runtime_services_path}/common:perm_verification",
    "${ability_runtime_services_path}/common:task_handler_wrap",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:extractortool",
    "ability_base:session_info",
    "ability_base:view_data",
    "ability_base:want",
    "ability_base:zuri",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bundle_framework:libappexecfwk_common",
    "cJSON:cjson",
    "c_utils:utils",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "faultloggerd:libbacktrace_local",
    "ffrt:libffrt",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "icu:shared_icuuc",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "os_account:os_account_innerkits",
    "qos_manager:concurrent_task_client",
    "relational_store:native_appdatafwk",
    "relational_store:native_dataability",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libmodal_system_ui_extension_client",
    "window_manager:libwsutils",
    "window_manager:scene_session",
    "window_manager:session_manager_lite",
    "window_manager:sms",
  ]

  if (ability_runtime_dsoftbus_enable) {
    external_deps += [ "dsoftbus:softbus_client" ]
  }

  if (ability_runtime_graphics) {
    external_deps += [ "input:libmmi-client" ]
  }
}

###############################################################################
group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    # deps file
    ":SubManagersHelperFuzzTest",
  ]
}
###############################################################################
