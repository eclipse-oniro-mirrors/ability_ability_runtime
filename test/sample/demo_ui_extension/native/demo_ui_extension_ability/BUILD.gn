# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

config("demo_ui_extension_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ui_extension_ability",
  ]
}

ohos_shared_library("demo_ui_extension") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  configs = [ ":demo_ui_extension_config" ]

  sources = [
    "src/demo_ui_extension.cpp",
    "src/js_demo_ui_extension.cpp",
    "src/js_demo_ui_extension_context.cpp",
  ]

  # If not in ability_runtime repo, use external_deps
  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_connect_callback_stub",
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability:ability_context_native",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:abilitykit_utils",
    "${ability_runtime_native_path}/ability/native:extensionkit_native",
    "${ability_runtime_native_path}/ability/native:ui_extension",
    "${ability_runtime_native_path}/appkit:app_context",
  ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_napi",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    defines = [ "SUPPORT_SCREEN" ]
    external_deps += [
      "ace_engine:ace_uicontent",
      "window_manager:libdm",
      "window_manager:libwm",
    ]

    public_external_deps = [ "window_manager:scene_session_manager" ]
  }

  subsystem_name = "ability"
  part_name = "ability_runtime"
}

config("demo_ui_extension_module_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ability_runtime",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ui_extension_ability",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ui_extension_base",
    "${ability_runtime_path}/interfaces/kits/native/ability/ability_runtime",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
  ]
}

ohos_shared_library("demo_ui_extension_module") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  sources = [ "src/demo_ui_extension_module_loader.cpp" ]

  configs = [
    ":demo_ui_extension_module_config",
    ":demo_ui_extension_config",
  ]

  deps = [
    ":demo_ui_extension",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_native_path}/ability/native:extensionkit_native",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "hilog:libhilog",
    "ipc:ipc_napi",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    defines = [ "SUPPORT_SCREEN" ]
    external_deps += [
      "ace_engine:ace_uicontent",
      "window_manager:libdm",
      "window_manager:libwm",
    ]

    public_external_deps = [ "window_manager:scene_session_manager" ]
  }

  relative_install_dir = "extensionability/"
  subsystem_name = "ability"
  part_name = "ability_runtime"
}
