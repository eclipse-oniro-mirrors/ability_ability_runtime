# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/abilitymgr"

ohos_unittest("js_ability_context_test") {
  module_out_path = module_output_path
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ability_runtime",
    "mock_parse_requestcode.h",
  ]

  sources = [ "js_ability_context_test.cpp" ]

  configs = []

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_connect_callback_stub",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability:ability_context_native",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_path}/services/abilitymgr:abilityms_target",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:js_environment",
    "ability_runtime:runtime",
    "c_utils:utils",
    "ets_runtime:libark_jsruntime",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "libuv:uv",
    "napi:ace_napi",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":js_ability_context_test" ]
}
