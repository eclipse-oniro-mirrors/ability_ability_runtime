# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/abilitymgr"

ohos_unittest("ability_bundle_event_callback_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/ability/ability_runtime/",
    "${ability_runtime_path}/interfaces/inner_api/uri_permission/include",
    "${ability_runtime_path}/interfaces/inner_api/ability_manager/include",
    "${ability_base_kits_path}/extractortool/include",
    "${ability_runtime_path}/services/abilitymgr/src/",
  ]

  sources = [
    "${ability_runtime_path}/services/abilitymgr/src/ability_auto_startup_data_manager.cpp",
    "${ability_runtime_path}/services/abilitymgr/src/ability_auto_startup_service.cpp",
    "${ability_runtime_path}/services/abilitymgr/src/ability_event_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_bundle_event_callback.cpp",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/appexecfwk_core/src/appmgr/mock_app_scheduler.cpp",
    "ability_bundle_event_callback_test.cpp",
  ]

  configs = [ "${ability_runtime_test_path}/mock/services_abilitymgr_test:aafwk_mock_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_innerkits_path}/uri_permission:uri_permission_mgr",
    "${ability_runtime_native_path}/ability/native:auto_startup_callback",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
    "${ability_runtime_services_path}/common:event_report",
    "${ability_runtime_services_path}/common:perm_verification",
    "${ability_runtime_services_path}/common:task_handler_wrap",
    "${ability_runtime_test_path}/mock/services_abilitymgr_test/libs/aakit:aakit_mock",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "ffrt:libffrt",
    "hilog:libhilog",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "kv_store:distributeddata_inner",
    "window_manager:libwsutils",
    "window_manager:sms",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":ability_bundle_event_callback_test" ]
}
