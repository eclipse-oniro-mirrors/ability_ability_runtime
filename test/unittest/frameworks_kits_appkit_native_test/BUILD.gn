# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")
module_output_path = "ability_runtime/application_test"

ABILITY_INNERKITS_PATH = "${ability_runtime_innerkits_path}"

###############################################################################
config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_bundle_manager_helper",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr",
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_native_test/include",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app/task",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  defines = [ "AMS_LOG_TAG = \"ApplicationUnitTest\"" ]
}

config("module_context_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr",
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_native_test/include",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_bundle_manager_helper",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app/task",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  defines = [ "AMS_LOG_TAG = \"ApplicationUnitTest\"" ]
}

ohos_unittest("context_deal_interface_test") {
  module_out_path = module_output_path
  sources = [
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_native_test/include/mock_ability_manager_client_interface1.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_native_test/include/mock_resourceManager_interface1.cpp",
    "context_deal_interface1_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "${global_path}/resource_management/frameworks/resmgr:global_resmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    deps += [ "${multimodalinput_path}/frameworks/proxy:libmmi-client" ]
  }
}

ohos_unittest("application_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_services_path}/common/include",
    "${ability_runtime_test_path}/mock/common/include",
    "${resource_management_path}/frameworks/resmgr/include",
  ]

  sources = [
    "${ability_runtime_native_path}/appkit/app/app_context.cpp",
    "${ability_runtime_native_path}/appkit/app/app_loader.cpp",
    "${ability_runtime_native_path}/appkit/app/application_cleaner.cpp",
    "${ability_runtime_native_path}/appkit/app/ohos_application.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_bundle_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_overlay_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/sys_mgr_client_mock.cpp",
    "application_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:uiabilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:extractortool",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("context_impl_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_services_path}/common/include",
    "${ability_runtime_test_path}/mock/common/include",
    "${resource_management_path}/frameworks/resmgr/include",
  ]

  sources = [
    "${ability_runtime_native_path}/appkit/app/app_context.cpp",
    "${ability_runtime_native_path}/appkit/app/app_loader.cpp",
    "${ability_runtime_native_path}/appkit/app/application_cleaner.cpp",
    "${ability_runtime_native_path}/appkit/app/ohos_application.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_bundle_manager.cpp",
    "context_impl_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:uiabilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:extractortool",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("context_container_test") {
  module_out_path = module_output_path
  sources = [
    "${ability_runtime_native_path}/appkit/app/app_loader.cpp",
    "${ability_runtime_native_path}/appkit/app/application_cleaner.cpp",
    "${ability_runtime_native_path}/appkit/app/ohos_application.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_bundle_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_overlay_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/sys_mgr_client_mock.cpp",
    "context_container_test.cpp",
  ]

  configs = [ ":module_context_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("context_deal_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_bundle_manager_helper",
    "${ability_runtime_test_path}/mock/common/include",
  ]

  sources = [
    "${ability_runtime_native_path}/appkit/app/app_loader.cpp",
    "${ability_runtime_native_path}/appkit/app/application_cleaner.cpp",
    "${ability_runtime_native_path}/appkit/app/ohos_application.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_bundle_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_overlay_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/sys_mgr_client_mock.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_native_test/include/mock_ability_manager_client.cpp",
    "context_deal_test.cpp",
  ]

  if (ability_runtime_feature_coverage) {
    cflags = [ "--coverage" ]
    ldflags = [ "--coverage" ]
  }

  configs = [ ":module_context_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("application_impl_test") {
  module_out_path = module_output_path
  sources = [
    "${ability_runtime_native_path}/appkit/app/app_context.cpp",
    "${ability_runtime_native_path}/appkit/app/app_loader.cpp",
    "${ability_runtime_native_path}/appkit/app/application_cleaner.cpp",
    "${ability_runtime_native_path}/appkit/app/application_env.cpp",
    "${ability_runtime_native_path}/appkit/app/application_env_impl.cpp",
    "${ability_runtime_native_path}/appkit/app/application_impl.cpp",
    "${ability_runtime_native_path}/appkit/app/ohos_application.cpp",
    "app_context_test.cpp",
    "app_loader_test.cpp",
    "application_env_impl_test.cpp",
    "application_impl_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ABILITY_INNERKITS_PATH}/uri_permission:uri_permission_mgr",
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_setting",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

config("ability_start_setting_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "${c_utils_base_path}/include",
    "${ability_runtime_innerkits_path}/ability_manager/include",
  ]
}

ohos_unittest("ability_start_setting_test") {
  module_out_path = module_output_path

  configs = [
    ":module_context_config",
    ":ability_start_setting_config",
  ]

  sources = [
    "${ability_runtime_services_path}/abilitymgr/src/ability_start_setting.cpp",
    "ability_start_setting_test.cpp",
  ]

  deps = [ "//third_party/googletest:gtest_main" ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]
}

ohos_unittest("ability_stage_test") {
  module_out_path = module_output_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"

  sources = [
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_bundle_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_overlay_manager.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/sys_mgr_client_mock.cpp",
    "ability_stage_test.cpp",
    "application_data_manager_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:uiabilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:extractortool",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("form_extension_context_test") {
  module_out_path = module_output_path

  sources = [
    "${ability_runtime_native_path}/appkit/app/app_loader.cpp",
    "${ability_runtime_native_path}/appkit/app/application_cleaner.cpp",
    "${ability_runtime_native_path}/appkit/app/ohos_application.cpp",
    "form_extension_context_test.cpp",
  ]

  configs = [ ":module_context_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_setting",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:form_extension",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "ffrt:libffrt",
    "form_fwk:fmskit_native",
    "form_fwk:form_manager",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("bms_context_impl_test") {
  module_out_path = module_output_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  include_dirs = [
    "${ability_runtime_services_path}/common/include",
    "${resource_management_path}/frameworks/resmgr/include",
    "${ability_runtime_test_path}/mock/common/include",
  ]

  sources = [ "bms_context_impl_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("context_container_by_mock_bms_test") {
  include_dirs = [ "${ability_runtime_test_path}/mock/common/include" ]
  module_out_path = module_output_path
  sources = [ "context_container_by_mock_bms_test.cpp" ]

  configs = [ ":module_context_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
}

ohos_unittest("assert_fault_test") {
  module_out_path = module_output_path

  include_dirs = []

  sources = [
    "${ability_runtime_native_path}/appkit/app/assert_fault_callback.cpp",
    "${ability_runtime_native_path}/appkit/app/assert_fault_task_thread.cpp",
    "assert_fault_callback_test.cpp",
    "assert_fault_task_thread_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "ability_runtime:runtime",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

ohos_unittest("dump_ipc_helper_test") {
  include_dirs = []
  module_out_path = module_output_path
  sources = [
    "${ability_runtime_native_path}/appkit/app/dump_ipc_helper.cpp",
    "dump_ipc_helper_test.cpp",
  ]

  configs = [ ":module_context_config" ]

  deps = [
    "${ability_runtime_native_path}/appkit:appkit_native",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
}

config("appkit_exception_config") {
  cflags_cc = [ "-fexceptions" ]
}

ohos_unittest("extension_plugin_info_test") {
  module_out_path = module_output_path
  sources = [
    "${ability_runtime_native_path}/appkit/app/extension_plugin_info.cpp",
    "extension_plugin_info_test.cpp",
  ]

  configs = [
    ":module_context_config",
    ":appkit_exception_config",
  ]

  deps = [
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:string_utils",
    "ability_runtime:runtime",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
}

ohos_unittest("idle_time_test") {
  module_out_path = module_output_path
  sources = [
    "${ability_runtime_native_path}/appkit/app/idle_time.cpp",
    "idle_time_test.cpp",
  ]

  configs = [ ":module_context_config" ]

  deps = [
    "${ability_runtime_native_path}/appkit:appkit_native",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
}

###############################################################################

group("unittest") {
  testonly = true
  deps = []

  deps += [
    ":ability_stage_test",
    ":ability_start_setting_test",
    ":application_impl_test",
    ":application_test",
    ":assert_fault_test",
    ":bms_context_impl_test",
    ":context_container_by_mock_bms_test",
    ":context_container_test",
    ":context_deal_test",
    ":dump_ipc_helper_test",
    ":extension_plugin_info_test",
    ":form_extension_context_test",
    ":idle_time_test",
  ]

  deps += [ "ability_delegator:unittest" ]
}
###############################################################################
