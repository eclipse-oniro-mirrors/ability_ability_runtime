# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/sleep_clean"

###############################################################################

ohos_unittest("sleep_clean_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/dfr",
    "${ability_runtime_path}/utils/global/time/include",
  ]

  configs = []

  sources = [
    "${ability_runtime_native_path}/appkit/dfr/sleep_clean.cpp",
    "sleep_clean_test.cpp",
  ]

  deps = [
    "${ability_runtime_abilitymgr_path}/:abilityms",
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:uiabilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:app_context_utils",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${ability_runtime_path}/js_environment/frameworks/js_environment:js_environment",
    "${ability_runtime_path}/utils/global/freeze:freeze_util",
    "${ability_runtime_services_path}/common:task_handler_wrap",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
}

###############################################################################

group("unittest") {
  testonly = true
  deps = [ ":sleep_clean_test" ]
}
