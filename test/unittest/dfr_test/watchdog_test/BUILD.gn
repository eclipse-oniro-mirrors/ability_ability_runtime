# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/watchdog_test"

###############################################################################
config("module_context_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr",
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_native_test/include",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app/task",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  defines = [ "AMS_LOG_TAG = \"ApplicationUnitTest\"" ]
}

config("ability_start_setting_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "${ability_runtime_path}/interfaces/kits/native/appkit/dfr",
    "${c_utils_base_path}/include",
    "${ability_runtime_innerkits_path}/ability_manager/include",
  ]
}

ohos_unittest("watchdog_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "${ability_runtime_path}/interfaces/kits/native/appkit/dfr",
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_test/include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/app",
  ]

  configs = [
    ":module_context_config",
    ":ability_start_setting_config",
  ]

  sources = [
    "${ability_runtime_test_path}/mock/frameworks_kits_appkit_test/include/mock_app_thread.cpp",
    "watchdog_test.cpp",
  ]

  deps = [
    "${ability_runtime_native_path}/appkit:appkit_native",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "napi:ace_napi",
  ]
}

###############################################################################

group("unittest") {
  testonly = true
  deps = [ ":watchdog_test" ]
}
