# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/appmgrservice"

ohos_unittest("AppMgrClientTest") {
  module_out_path = module_output_path

  configs = [
    "${ability_runtime_services_path}/common:common_config",
    "${ability_runtime_services_path}/abilitymgr:abilityms_config",
  ]

  include_dirs = [
    "${ability_runtime_services_path}/abilitymgr/include",
    "${ability_runtime_services_path}/appmgr/test/unittest/mocks",
    "${ability_runtime_test_path}/mock/common/include",
    "${ability_runtime_test_path}/mock/mock_sa_call",
    "${ability_runtime_test_path}/unittest/ability_debug_response_stub_test",
    "${ability_runtime_test_path}/unittest/app_debug_listener_stub_test",
    "${distributedschedule_path}/samgr/interfaces/innerkits/samgr_proxy/include",
  ]

  sources = [
    "${ability_runtime_test_path}/mock/common/src/mock_native_token.cpp",
    "app_mgr_client_test.cpp",
  ]

  deps = [
    "${ability_runtime_services_path}/abilitymgr:abilityms",
    "${ability_runtime_services_path}/common:perm_verification",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "ffrt:libffrt",
    "hilog:libhilog",
    "init:libbeget_proxy",
    "ipc:ipc_core",
    "jsoncpp:jsoncpp",
  ]

  if (background_task_mgr_continuous_task_enable) {
    external_deps += [ "background_task_mgr:bgtaskmgr_innerkits" ]
  }
}

group("unittest") {
  testonly = true

  deps = [ ":AppMgrClientTest" ]
}
