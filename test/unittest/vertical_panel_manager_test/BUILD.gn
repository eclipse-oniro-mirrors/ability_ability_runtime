# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_out_path = "ability_runtime/ability_runtime/vertical_panel_manager_test"

###############################################################################

config("module_private_config") {
  visibility = [ ":*" ]
}

ohos_unittest("start_vertical_panel_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include",
    "include",
  ]

  sources = [ "start_vertical_panel_test.cpp" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_connect_callback_stub",
    "${ability_runtime_native_path}/ability:ability_context_native",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ace_engine:ace_uicontent",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [
      "window_manager:libwsutils",
      "window_manager:scene_session",
    ]
  }
}

ohos_unittest("panel_start_callback_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include",
    "${ability_runtime_napi_path}/ability_vertical_panel",
    "${ability_runtime_path}/js_environment/interfaces/inner_api",
    "${ability_runtime_path}/js_environment/frameworks/utils/include",
    "include",
  ]

  sources = [
    "${ability_runtime_napi_path}/ability_vertical_panel/js_panel_start_callback.cpp",
    "panel_start_callback_test.cpp",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_connect_callback_stub",
    "${ability_runtime_innerkits_path}/napi_base_context:napi_base_context",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_napi_path}/ability_vertical_panel:verticalpanelmanager_napi",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability:ability_context_native",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_path}/js_environment/frameworks/js_environment:js_environment",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ace_engine:ace_uicontent",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [
      "window_manager:libwsutils",
      "window_manager:scene_session",
    ]
  }
}

################################################################################
group("unittest") {
  testonly = true
  deps = []

  deps += [
    ":panel_start_callback_test",
    ":start_vertical_panel_test",
  ]
}
