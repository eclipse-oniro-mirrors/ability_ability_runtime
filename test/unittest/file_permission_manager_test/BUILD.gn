# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/uripermmgr"
config("coverage_flags") {
  if (ability_runtime_feature_coverage) {
    cflags = [ "--coverage" ]
    ldflags = [ "--coverage" ]
  }
}

ohos_unittest("file_permission_manager_test") {
  module_out_path = module_output_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  include_dirs = [ "${ability_runtime_path}/interfaces/kits/native/appkit/ability_bundle_manager_helper" ]

  sources = [ "file_permission_manager_test.cpp" ]

  configs = [
    ":coverage_flags",
    "${ability_runtime_innerkits_path}/app_manager:appmgr_sdk_config",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${ability_runtime_innerkits_path}/uri_permission:uri_permission_mgr",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_services_path}/common:app_util",
    "${ability_runtime_services_path}/uripermmgr:libupms_static",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
  if (background_task_mgr_continuous_task_enable) {
    external_deps += [ "background_task_mgr:bgtaskmgr_innerkits" ]
  }
  if (ability_runtime_feature_sandboxmanager) {
    external_deps += [ "sandbox_manager:libsandbox_manager_sdk" ]
    defines = [ "ABILITY_RUNTIME_FEATURE_SANDBOXMANAGER" ]
  }
}

group("unittest") {
  testonly = true

  deps = [ ":file_permission_manager_test" ]
}
