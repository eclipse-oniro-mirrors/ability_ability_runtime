# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/appmgrservice"

ohos_unittest("AmsAppMgrClientTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  module_out_path = module_output_path
  cflags_cc = []
  sources = [
    "${ability_runtime_innerkits_path}//app_manager/src/appmgr/app_mgr_client.cpp",
    "${ability_runtime_innerkits_path}//app_manager/src/appmgr/app_service_manager.cpp",
  ]

  sources += [
    "${ability_runtime_test_path}/mock/common/src/mock_native_token.cpp",
    "ams_app_mgr_client_test.cpp",
  ]

  include_dirs = [ "${ability_runtime_test_path}/mock/common/include" ]

  configs =
      [ "${ability_runtime_innerkits_path}/app_manager:appmgr_sdk_config" ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_path}/utils/server/startup:startup_util",
    "${ability_runtime_services_path}/common:perm_verification",
    "${ability_runtime_test_path}/unittest:appmgr_test_source",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "appspawn:appspawn_client",
    "bundle_framework:appexecfwk_core",
    "cJSON:cjson",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "selinux_adapter:librestorecon",
  ]

  if (ability_runtime_child_process) {
    defines = [ "SUPPORT_CHILD_PROCESS" ]
  }
  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }
}

group("unittest") {
  testonly = true

  deps = [ ":AmsAppMgrClientTest" ]
}
