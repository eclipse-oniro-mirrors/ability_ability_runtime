# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/abilitymgr"

ohos_unittest("preload_manager_service_test") {
  module_out_path = module_output_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  include_dirs = [
    "mock/include",
    "${ability_runtime_innerkits_path}/ability_manager/include/",
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr/",
    "${ability_runtime_services_path}/abilitymgr/include/",
    "${ability_runtime_services_path}/common/include",
  ]

  sources = [
    "preload_manager_service_test.cpp",
    "mock/src/mock_ability_manager_service.cpp",
    "mock/src/mock_app_scheduler.cpp",
    "mock/src/mock_app_utils.cpp",
    "mock/src/mock_bundle_mgr_helper.cpp",
    "mock/src/mock_permission_verification.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/preload_manager_service.cpp",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:process_options",
    "${ability_runtime_innerkits_path}/ability_manager:start_window_option",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  cflags_cc = []
}

group("unittest") {
  testonly = true
  deps = [ ":preload_manager_service_test" ]
}
