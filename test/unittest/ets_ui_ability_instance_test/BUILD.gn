# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/ability_test"

ohos_unittest("ets_ui_ability_instance_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${ability_runtime_path}/ets_environment/interfaces/inner_api",
    "${ability_runtime_path}/interfaces/kits/native/ability/ability_runtime",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ability_runtime",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ui_extension_ability",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "${ability_runtime_path}/utils/global/time/include",
    "${ability_runtime_services_path}/common/include",
  ]

  sources = [ "ets_ui_ability_instance_test.cpp" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_connect_callback_stub",
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_setting",
    "${ability_runtime_innerkits_path}/ability_manager:process_options",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability:ability_context_native",
    "${ability_runtime_native_path}/ability/native:insight_intent_executor",
    "${ability_runtime_native_path}/ability/native:uiabilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_delegator",
    "${ability_runtime_native_path}/insight_intent/insight_intent_context:insightintentcontext",
    "${ability_runtime_path}/utils/global/freeze:freeze_util",
    "${ability_runtime_services_path}/common:app_util",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "ets_runtime:libark_jsruntime",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "resource_management:global_resmgr",
    "samgr:samgr_proxy",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":ets_ui_ability_instance_test" ]
}
