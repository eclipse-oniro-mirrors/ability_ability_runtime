# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

ohos_unittest("extension_record_manager_test") {
  module_out_path = "ability_runtime/ui_extension"

  cflags_cc = []

  include_dirs = [
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include",
    "${ability_runtime_test_path}/mock/common/include",
  ]

  sources = [
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/ability_state_data.cpp",
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/app_mgr_client.cpp",
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/app_service_manager.cpp",
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/app_state_data.cpp",
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/application_state_observer_stub.cpp",
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/page_state_data.cpp",
    "${ability_runtime_innerkits_path}/app_manager/src/appmgr/process_data.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_record_factory.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_record_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/preload_uiext_state_observer.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ui_extension_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ui_extension_record_factory.cpp",
    "${ability_runtime_services_path}/common/src/app_utils.cpp",
    "${ability_runtime_services_path}/common/src/json_utils.cpp",
    "${ability_runtime_test_path}/mock/common/src/mock_native_token.cpp",
    "extension_record_manager_test.cpp",
  ]

  configs = [ "${ability_runtime_services_path}/abilitymgr:abilityms_config" ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_deps_wrapper",
    "ability_runtime:ability_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bundle_framework:libappexecfwk_common",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "config_policy:configpolicy_util",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "napi:ace_napi",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (ability_runtime_graphics) {
    external_deps += [
      "input:libmmi-client",
      "window_manager:libwsutils",
      "window_manager:scene_session",
    ]
  }
}

group("unittest") {
  testonly = true
  deps = [ ":extension_record_manager_test" ]
}
