# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/wantagent"

ohos_unittest("want_agent_helper_test") {
  module_out_path = module_output_path
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context/",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime",
    "${ability_runtime_services_path}/abilitymgr/include/utils",
    "${ability_runtime_services_path}/abilitymgr/include",

    "${ability_runtime_test_path}/mock/remote_native_token_mock/",
  ]

  sources = [
    "${ability_runtime_test_path}/mock/remote_native_token_mock/remote_native_token.cpp",
    "want_agent_helper_test.cpp",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_services_path}/abilitymgr:abilityms",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:ability_runtime_error_util",
    "ability_runtime:abilitykit_native",
    "ability_runtime:wantagent_innerkits",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "cJSON:cjson",
    "c_utils:utils",
    "common_event_service:cesfwk_core",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
    "samgr:samgr_proxy",
    "selinux_adapter:librestorecon",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":want_agent_helper_test" ]
}
