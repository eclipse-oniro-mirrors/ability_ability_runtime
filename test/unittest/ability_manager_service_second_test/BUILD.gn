# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/abilitymgr"

ohos_unittest("ability_manager_service_second_test") {
  module_out_path = module_output_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  configs = [
    ":abilityms_config",
    ":abilityms_exception_config",
  ]
  include_dirs = [
    "../ability_manager_service_thirteenth_test/mock/include",
    "${ability_runtime_abilitymgr_path}/include/",
    "${ability_runtime_abilitymgr_path}/include/data_ability",
    "${ability_runtime_abilitymgr_path}/include/dialog_session/",
    "${ability_runtime_abilitymgr_path}/include/extension_record",
    "${ability_runtime_abilitymgr_path}/include/insight_intent",
    "${ability_runtime_abilitymgr_path}/include/keep_alive/",
    "${ability_runtime_abilitymgr_path}/include/mission/",
    "${ability_runtime_abilitymgr_path}/include/rdb/",
    "${ability_runtime_abilitymgr_path}/include/resident_process/",
    "${ability_runtime_abilitymgr_path}/include/screen_lock/",
    "${ability_runtime_abilitymgr_path}/include/ui_extension",
    "${ability_runtime_abilitymgr_path}/include/ui_extension_record",
    "${ability_runtime_abilitymgr_path}/include/utils/",
    "${ability_runtime_innerkits_path}/ability_manager/include",
    "${ability_runtime_innerkits_path}/app_manager/include",
    "${ability_runtime_innerkits_path}/connectionobs_manager/include",
    "${ability_runtime_innerkits_path}/dataobs_manager/include",
    "${ability_runtime_innerkits_path}/deps_wrapper/include",
    "${ability_runtime_innerkits_path}/session_handler/include",
    "${ability_runtime_innerkits_path}/wantagent/include",
    "${ability_runtime_test_path}/mock/mock_sa_call",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/ui_service_extension_ability/connection",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_bundle_manager_helper",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime",
    "${ability_runtime_path}/tools/aa/include",
    "${ability_runtime_path}/utils/global/time/include",
    "${ability_runtime_services_path}/abilitymgr/data_ability/include",
    "${ability_runtime_services_path}/abilitymgr/include",
    "${ability_runtime_services_path}/abilitymgr/include/utils",
    "${ability_runtime_services_path}/appdfr/include",
    "${ability_runtime_services_path}/common/include",
    "${ability_runtime_utils_path}/global/constant",
    "${ability_runtime_utils_path}/server/constant",
    "//prebuilts/jdk/jdk8/linux-x86/include",
    "//prebuilts/jdk/jdk8/linux-x86/include/linux",
  ]

  sources = [
    "${ability_runtime_innerkits_path}/uri_permission/src/uri_permission_load_callback.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_auto_startup_data_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_auto_startup_service.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_background_connection.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_bundle_event_callback.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_cache_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_connect_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_debug_deal.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_event_handler.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_first_frame_state_observer_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_manager_collaborator_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_manager_event_subscriber.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_manager_service.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_manager_stub.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_record_death_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_running_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_scheduler_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_start_with_wait_observer_manager/ability_start_with_wait_observer_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ability_token_stub.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ams_configuration_parameter.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/app_exit_reason_data_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/app_exit_reason_helper.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/app_scheduler.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/assert_fault_callback_death_mgr.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/assert_fault_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/atomic_service_status_callback.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/atomic_service_status_callback_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/atomic_service_status_callback_stub.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/auto_startup_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/background_task_observer.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/call_container.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/call_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/caller_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/connection_observer_controller.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/connection_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/connection_state_item.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/connection_state_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/data_ability/data_ability_caller_recipient.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/data_ability/data_ability_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/deeplink_reserve/deeplink_reserve_config.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/dialog_session/dialog_session_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/disposed_observer.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/dlp_state_item.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ecological_rule/ability_ecological_rule_mgr_service.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ecological_rule/ability_ecological_rule_mgr_service_param.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/exit_info_data_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_config.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_record/extension_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_record/extension_record_factory.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_record/extension_record_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/extension_running_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/free_install_observer_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/hidden_start_observer_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/implicit_start_processor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/inner_mission_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_execute_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_execute_result.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_profile.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/hmsf_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_rdb_data_mgr.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_rdb_storage_mgr.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_db_cache.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/extract_insight_intent_profile.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_event_mgr.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_sys_event_receiver.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/ability_interceptor_executer.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/ability_jump_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/block_all_app_start_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/control_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/crowd_test_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/disposed_rule_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/extension_control_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/kiosk_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/screen_unlock_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/interceptor/start_other_app_interceptor.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/keep_alive/ability_keep_alive_data_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/keep_alive/ability_keep_alive_service.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/keep_alive/keep_alive_process_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/kiosk_status.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/kiosk_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/lifecycle_deal.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/mission/mission_list_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/mission/mission_listener_controller.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/mission/mission_listener_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/modal_system_dialog/modal_system_dialog_ui_extension.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/pending_want_common_event.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/pending_want_key.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/pending_want_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/pending_want_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/query_erms_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/query_erms_observer_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/rdb/ability_resident_process_rdb.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/rdb/parser_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/rdb/rdb_data_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/recovery_info_timer.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/remote_mission_listener_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/report_data_partition_usage_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/resident_process/resident_process_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/restart_app_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/sa_interceptor_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/scene_board/status_bar_delegate_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/screen_lock/unlock_screen_callback.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/screen_lock/unlock_screen_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/sender_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/start_ability_handler.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/start_ability_handler/start_ability_sandbox_savefile.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/start_options.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/system_dialog_scheduler.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ui_extension/preload_uiext_state_observer.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ui_extension_record/ui_extension_record.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/ui_extension_record/ui_extension_record_factory.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/user_callback_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/user_controller.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/user_event_handler.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/ability_event_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/ability_permission_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/app_mgr_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/dms_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/dump_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/extension_permissions_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/hidden_start_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/keep_alive_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/main_element_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/modal_system_dialog_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/multi_app_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/multi_instance_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/start_ability_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/state_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/timeout_state_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/update_caller_info_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/uri_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/want_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/window_options_utils.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/utils/request_id_util.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/want_receiver_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/want_receiver_stub.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/want_sender_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/want_sender_proxy.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/want_sender_stub.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/wants_info.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/window_focus_changed_listener.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/window_visibility_changed_listener.cpp",
    "${ability_runtime_services_path}/appdfr/src/application_anr_listener.cpp",
    "${ability_runtime_services_path}/common/src/ability_manager_radar.cpp",
    "${ability_runtime_services_path}/common/src/ffrt_task_handler_wrap.cpp",
    "${ability_runtime_services_path}/common/src/json_utils.cpp",
    "${ability_runtime_services_path}/common/src/queue_task_handler_wrap.cpp",
    "${ability_runtime_services_path}/common/src/task_handler_wrap.cpp",
    "${ability_runtime_test_path}/mock/frameworks_kits_ability_native_test/include/mock_ability_manager_client.cpp",
    "ability_manager_service_second_test.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_ability_record.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_accesstoken_kit.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_app_utils.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_data_ability_manager.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_ecological_rule_interceptor.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_free_install_manager.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_ipc_skeleton.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_parameters.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_permission_verification.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_scene_board_judgement.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_sub_managers_helper.cpp",
    "../ability_manager_service_thirteenth_test/mock/src/mock_ui_ability_lifecycle_manager.cpp",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_connect_callback_stub",
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_setting",
    "${ability_runtime_innerkits_path}/ability_manager:mission_info",
    "${ability_runtime_innerkits_path}/ability_manager:process_options",
    "${ability_runtime_innerkits_path}/ability_manager:start_window_option",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/connectionobs_manager:connection_obs_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_innerkits_path}/error_utils:ability_runtime_error_util",
    "${ability_runtime_innerkits_path}/session_handler:session_handler",
    "${ability_runtime_innerkits_path}/uri_permission:uri_permission_mgr",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:auto_startup_callback",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_path}/utils/global/freeze:freeze_util",
    "${ability_runtime_path}/utils/server/startup:startup_util",
    "${ability_runtime_services_path}/abilitymgr:mission_list",
    "${ability_runtime_services_path}/common:app_util",
    "${ability_runtime_services_path}/common:event_report",
    "${ability_runtime_services_path}/common:perm_verification",
    "${ability_runtime_services_path}/common:rate_limiter",
    "${ability_runtime_services_path}/common:record_cost_time_util",
    "${ability_runtime_services_path}/common:res_sched_util",
    "${ability_runtime_services_path}/common:task_handler_wrap",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:extractortool",
    "ability_base:session_info",
    "ability_base:view_data",
    "ability_base:want",
    "ability_base:zuri",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "access_token:libtokenid_sdk",
    "appspawn:appspawn_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bundle_framework:libappexecfwk_common",
    "c_utils:utils",
    "cJSON:cjson",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "config_policy:configpolicy_util",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "faultloggerd:libbacktrace_local",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "icu:shared_icuuc",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "kv_store:distributeddata_inner",
    "os_account:os_account_innerkits",
    "qos_manager:concurrent_task_client",
    "relational_store:native_appdatafwk",
    "relational_store:native_dataability",
    "relational_store:native_rdb",
    "safwk:api_cache_manager",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "selinux_adapter:librestorecon",
    "window_manager:libmodal_system_ui_extension_client",
    "window_manager:libwsutils",
    "window_manager:scene_session",
    "window_manager:session_manager_lite",
    "window_manager:sms",
  ]

  if (memmgr_override_enable) {
    external_deps += [ "memmgr:memmgrclient" ]
  }

  if (ability_runtime_graphics) {
    external_deps += [
      "ability_base:session_info",
      "i18n:intl_util",
      "icu:shared_icuuc",
      "image_framework:image_native",
      "input:libmmi-client",
      "resource_management:global_resmgr",
      "screenlock_mgr:screenlock_client",
      "window_manager:libdm",
      "window_manager:libmodal_system_ui_extension_client",
      "window_manager:libwm",
      "window_manager:libwsutils",
      "window_manager:scene_session",
      "window_manager:sms",
    ]
  }

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  cflags_cc = []
  if (os_dlp_part_enabled) {
    cflags_cc += [ "-DWITH_DLP" ]
    external_deps += [
      "dlp_permission_service:libdlp_permission_sdk",
      "dlp_permission_service:libdlpparse",
    ]
  }
}

config("abilityms_config") {
  defines = []

  if (ability_command_for_test) {
    defines += [ "ABILITY_COMMAND_FOR_TEST" ]
  }

  if (ability_fault_and_exit_test) {
    defines += [ "ABILITY_FAULT_AND_EXIT_TEST" ]
  }

  if (ability_runtime_graphics) {
    defines += [
      "SUPPORT_GRAPHICS",
      "SUPPORT_SCREEN",
    ]
  }

  if (background_task_mgr_continuous_task_enable) {
    defines += [ "BGTASKMGR_CONTINUOUS_TASK_ENABLE" ]
  }

  if (resource_schedule_service_enable) {
    defines += [ "RESOURCE_SCHEDULE_SERVICE_ENABLE" ]
  }

  if (memmgr_override_enable) {
    defines += [ "MEMMGR_OVERRIDE_ENABLE" ]
  }

  if (is_asan || asan_detector) {
    defines += [ "SUPPORT_ASAN" ]
  }
}
config("abilityms_exception_config") {
  cflags_cc = [ "-fexceptions" ]
}

group("unittest") {
  testonly = true
  deps = [ ":ability_manager_service_second_test" ]
}
