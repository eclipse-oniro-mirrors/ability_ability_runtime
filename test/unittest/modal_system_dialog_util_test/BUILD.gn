# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

module_output_path = "ability_runtime/ability_runtime/abilitymgr"

ohos_unittest("modal_system_dialog_util_test") {
  module_out_path = module_output_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../../test/cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  include_dirs = [
    "include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_bundle_manager_helper",
    "${ability_runtime_services_path}/abilitymgr/include/utils",
    "${ability_runtime_services_path}/abilitymgr/include/keep_alive",
    "${ability_runtime_services_path}/abilitymgr/include",
    "${ability_runtime_services_path}/appmgr/include",
    "${ability_runtime_services_path}/common/include",
    "${ability_runtime_test_path}/mock/services_appmgr_test/include",
    "mock/include",
  ]

  sources = [
    "${ability_runtime_services_path}/abilitymgr/src/utils/modal_system_dialog_util.cpp",
    "mock/src/mock_parameters.cpp",
    "modal_system_dialog_util_test.cpp",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_deps_wrapper",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "appspawn:appspawn_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "kv_store:distributeddata_mgr",
    "memory_utils:libmeminfo",
    "napi:ace_napi",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
  if (ability_runtime_dsoftbus_enable) {
    external_deps += [ "dsoftbus:softbus_client" ]
  }
  if (ability_runtime_child_process) {
    defines = [ "SUPPORT_CHILD_PROCESS" ]
  }
}

group("unittest") {
  testonly = true

  deps = [ ":modal_system_dialog_util_test" ]
}
