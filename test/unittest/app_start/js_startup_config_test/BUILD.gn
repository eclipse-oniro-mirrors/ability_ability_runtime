# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

ohos_unittest("js_startup_config_test") {
  module_out_path = "ability_runtime/ability_runtime/app_start"

  cflags_cc = []

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/appkit/app_startup",
    "${ability_runtime_path}/test/unittest/app_start/mock",
    "${ability_runtime_path}/frameworks/native/runtime",
  ]

  sources = [
    "${ability_runtime_path}/test/unittest/app_start/mock/mock_js_runtime.cpp",
    "${ability_runtime_path}/test/unittest/app_start/mock/mock_my_flag.cpp",
    "js_startup_config_test.cpp",
  ]

  configs = [ "${ability_runtime_services_path}/abilitymgr:abilityms_config" ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ability_runtime_abilitymgr_path}/:abilityms",
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/deps_wrapper:ability_deps_wrapper",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability/native:ability_thread",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:configuration_helper",
    "${ability_runtime_native_path}/ability/native:extensionkit_native",
    "${ability_runtime_native_path}/ability/native:uiabilitykit_native",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:app_context_utils",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_native_path}/appkit:appkit_native",
    "${ability_runtime_path}/js_environment/frameworks/js_environment:js_environment",
    "${ability_runtime_path}/utils/global/freeze:freeze_util",
    "${ability_runtime_services_path}/common:app_util",
    "${ability_runtime_services_path}/common:event_report",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_deps_wrapper",
    "ability_runtime:ability_manager",
    "ability_runtime:js_environment",
    "bundle_framework:libappexecfwk_common",
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":js_startup_config_test" ]
}
