# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

ohos_unittest("insight_intent_execute_manager_second_test") {
  module_out_path = "ability_runtime/ability_runtime/insight_intent"

  cflags_cc = []

  include_dirs = [
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr",
    "${ability_runtime_services_path}/abilitymgr/include/insight_intent",
    "${ability_runtime_services_path}/common/include",
    "${ability_runtime_test_path}/mock/services_appmgr_test/include",
  ]

  sources = [
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_execute_manager.cpp",
    "${ability_runtime_services_path}/abilitymgr/src/insight_intent/insight_intent_profile.cpp",
    "insight_intent_execute_manager_mock.cpp",
    "insight_intent_execute_manager_second_test.cpp",
  ]

  configs = [ "${ability_runtime_services_path}/abilitymgr:abilityms_config" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
    "${ability_runtime_services_path}/common:event_report",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_deps_wrapper",
    "ability_runtime:ability_manager",
    "bundle_framework:libappexecfwk_common",
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "ipc:ipc_core",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":insight_intent_execute_manager_second_test" ]
}
