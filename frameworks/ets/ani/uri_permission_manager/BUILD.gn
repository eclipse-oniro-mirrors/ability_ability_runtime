# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

ohos_shared_library("uri_permission_manager_ani_kit") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }

  include_dirs = [
    "./include",
    "${ability_runtime_path}/frameworks/ets/ani/enum_convert",
    "${ability_runtime_path}/frameworks/js/napi/uri_permission",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/app",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/context",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/ability_delegator/include",
    "${ability_runtime_services_path}/common/include",
  ]
  configs = []

  public_configs = []

  sources = [ "./src/sts_uri_perm_mgr.cpp" ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/error_utils:ability_runtime_error_util",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_innerkits_path}/uri_permission:uri_permission_mgr",
    "${ability_runtime_path}/frameworks/ets/ani/ani_common:ani_common",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/ability/native:ability_business_error",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_native_path}/appkit:appkit_delegator",
    "${ability_runtime_native_path}/appkit:delegator_mgmt",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "json:nlohmann_json_static",
    "napi:ace_napi",
    "runtime_core:ani",
  ]

  public_external_deps = [ "ability_base:configuration" ]

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "ability"
  part_name = "ability_runtime"
}

generate_static_abc("uri_permission_manager_abc") {
  base_url = "./ets"

  files = [ "./ets/@ohos.application.uriPermissionManager.ets" ]

  dst_file = "$target_out_dir/uri_permission_manager.abc"
  out_puts = [ "$target_out_dir/uri_permission_manager.abc" ]

  is_boot_abc = "True"
  device_dst_file = "/system/framework/uri_permission_manager.abc"
}

ohos_prebuilt_etc("uri_permission_manager_abc_etc") {
  source = "$target_out_dir/uri_permission_manager.abc"
  module_install_dir = "framework"
  subsystem_name = "ability"
  part_name = "ability_runtime"
  deps = [ ":uri_permission_manager_abc" ]
}