# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

ohos_shared_library("missionmanager_napi") {
  sources = [
    "js_mission_info_utils.cpp",
    "js_mission_listener.cpp",
    "mission_manager.cpp",
    "native_module.cpp",
  ]

  configs = [ "${ability_runtime_services_path}/common:common_config" ]

  include_dirs = [ "${ability_runtime_path}/interfaces/kits/native/ability/native/continuation/kits" ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:mission_info",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [
      "graphic_2d:color_manager",
      "icu:shared_icuuc",
      "image_framework:image",
    ]
    defines = [
      "SUPPORT_GRAPHICS",
      "SUPPORT_SCREEN",
    ]
  }

  cflags_cc = []
  if (os_dlp_part_enabled) {
    cflags_cc += [ "-DWITH_DLP" ]
  }

  relative_install_dir = "module/application"

  subsystem_name = "ability"
  part_name = "ability_runtime"
}

ohos_shared_library("distributedmissionmanager") {
  include_dirs = []

  configs = [ "${ability_runtime_services_path}/common:common_config" ]

  cflags = [
    "-fPIC",
    "-g3",
  ]

  sources = [
    "distributed_mission_manager.cpp",
    "distributed_mission_manager_helper.cpp",
    "dms_sa_client.cpp",
    "mission_continue_stub.cpp",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:mission_info",
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
  ]

  external_deps = [
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "libuv:uv",
    "napi:ace_napi",
    "node:node_header_notice",
    "samgr:samgr_proxy",
  ]

  relative_install_dir = "module"

  subsystem_name = "ability"
  part_name = "ability_runtime"
}
