# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

template("delegator") {
  ohos_shared_library(target_name) {
    forward_variables_from(invoker, [ "relative_install_dir" ])

    if (defined(invoker.defines)) {
      defines = invoker.defines
    }

    include_dirs = [
      "./",
      "${ability_runtime_path}/interfaces/kits/native/appkit/ability_delegator/",
      "${ability_runtime_path}/interfaces/kits/native/ability/native",
      "${ability_runtime_path}/tools/aa/include",
    ]

    sources = [
      "ability_monitor.cpp",
      "js_ability_delegator.cpp",
      "js_ability_delegator_registry.cpp",
      "js_ability_delegator_utils.cpp",
      "js_ability_monitor.cpp",
      "native_module.cpp",
    ]

    configs = [ "${ability_runtime_services_path}/common:common_config" ]

    deps = [
      "${ability_runtime_innerkits_path}/runtime:runtime",
      "${ability_runtime_napi_path}/inner/napi_common:napi_common",
      "${ability_runtime_native_path}/ability/native:abilitykit_native",
      "${ability_runtime_native_path}/appkit:app_context_utils",
      "${ability_runtime_native_path}/appkit:appkit_delegator",
    ]

    external_deps = [
      "ability_base:want",
      "c_utils:utils",
      "common_event_service:cesfwk_innerkits",
      "hilog:libhilog",
      "hitrace:hitrace_meter",
      "napi:ace_napi",
    ]

    cflags_cc = []
    if (os_dlp_part_enabled) {
      cflags_cc += [ "-DWITH_DLP" ]
      external_deps += [ "dlp_permission_service:libdlp_permission_sdk" ]
    }

    subsystem_name = "ability"
    part_name = "ability_runtime"
  }
}

delegator("abilitydelegatorregistry_napi") {
  relative_install_dir = "module/application"
}

delegator("abilitydelegatorregistry") {
  relative_install_dir = "module/app/ability"
  defines = [ "ENABLE_ERRCODE" ]
}
