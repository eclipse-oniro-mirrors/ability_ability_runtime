# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

config("napi_ability_common_public_config") {
  include_dirs = [ "./" ]
}

ohos_shared_library("napi_ability_common") {
  public_configs = [
    ":napi_ability_common_public_config",
    "${ability_runtime_native_path}/ability/native:ability_public_config",
    "${ability_runtime_innerkits_path}/wantagent:wantagent_innerkits_public_config",
  ]

  sources = [
    "js_napi_common.cpp",
    "napi_common_ability.cpp",
    "napi_common_ability_execute_utils.cpp",
    "napi_common_ability_wrap_utils.cpp",
    "napi_context.cpp",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/ability_manager:ability_manager",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_options",
    "${ability_runtime_innerkits_path}/ability_manager:ability_start_setting",
    "${ability_runtime_innerkits_path}/napi_base_context:napi_base_context",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_innerkits_path}/wantagent:wantagent_innerkits",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/ability/native:abilitykit_native",
    "${ability_runtime_native_path}/appkit:appkit_manager_helper",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "napi:ace_napi",
  ]

  public_external_deps = [
    "ability_base:configuration",
    "bundle_framework:appexecfwk_core",
  ]

  if (ability_runtime_graphics) {
    defines = [
      "SUPPORT_GRAPHICS",
      "SUPPORT_SCREEN",
    ]
    public_external_deps += [
      "form_fwk:fmskit_provider_client",
      "form_fwk:form_manager",
      "window_manager:libdm",
    ]
  }
  cflags_cc = []
  if (os_dlp_part_enabled) {
    cflags_cc += [ "-DWITH_DLP" ]
  }

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "ability"
  part_name = "ability_runtime"
}
