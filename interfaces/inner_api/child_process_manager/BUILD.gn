# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")

config("child_process_manager_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${ability_runtime_ndk_path}/ability/ability_runtime/child_process",
    "include",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_shared_library("child_process_manager") {
  configs = [ "${ability_runtime_services_path}/common:common_config" ]
  public_configs = [ ":child_process_manager_config" ]

  sources = [
    "${ability_runtime_native_path}/ability/native/child_process_manager/child_process.cpp",
    "${ability_runtime_native_path}/ability/native/child_process_manager/child_process_manager.cpp",
    "${ability_runtime_native_path}/ability/native/child_process_manager/child_process_manager_error_utils.cpp",
    "${ability_runtime_native_path}/ability/native/child_process_manager/js_child_process.cpp",
    "${ability_runtime_native_path}/ability/native/child_process_manager/native_args_child_process.cpp",
    "${ability_runtime_native_path}/ability/native/child_process_manager/native_child_ipc_process.cpp",
  ]

  deps = [
    "${ability_runtime_innerkits_path}/app_manager:app_manager",
    "${ability_runtime_innerkits_path}/runtime:runtime",
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${ability_runtime_native_path}/appkit:app_context",
    "${ability_runtime_services_path}/common:app_util",
  ]

  external_deps = [
    "ability_base:extractortool",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "ets_runtime:libark_jsruntime",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_capi",
    "ipc:ipc_core",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]

  defines = []
  if (background_task_mgr_continuous_task_enable) {
    defines += [ "BGTASKMGR_CONTINUOUS_TASK_ENABLE" ]
  }

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "ability"
  part_name = "ability_runtime"
}
